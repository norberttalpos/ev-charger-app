swagger: '2.0'
info:
  description: ev-charger-app API to perform CRUD opertations
  version: '1.0'
  title: ev-charger-app REST API
  termsOfService: Terms of service
  contact:
    name: Adja
host: localhost:8080
basePath: /
tags:
  - name: Charger
    description: Charger Controller
  - name: ChargerType
    description: Charger Type Controller
  - name: ChargingStation
    description: Charging Station Controller
  - name: ElectricCar
    description: Electric Car Controller
  - name: ElectricCarType
    description: Electric Car Type Controller
  - name: EmailSending
    description: Email Sending Controller
  - name: Location
    description: Location Controller
  - name: Notification
    description: Notification Controller
  - name: Person
    description: Person Controller
  - name: TokenHandler
    description: Token Controller
paths:
  /api/charger:
    get:
      tags:
        - Charger
      summary: getAll
      operationId: getAllUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Charger'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - Charger
      summary: post
      operationId: postUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Charger'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/charger/search:
    post:
      tags:
        - Charger
      summary: search
      operationId: searchUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/ChargerFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Charger'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/charger/{id}:
    get:
      tags:
        - Charger
      summary: getById
      operationId: getByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Charger'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Charger
      summary: put
      operationId: putUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Charger'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Charger
      summary: deleteById
      operationId: deleteByIdUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/chargerType:
    get:
      tags:
        - ChargerType
      summary: getAll
      operationId: getAllUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChargerType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ChargerType
      summary: post
      operationId: postUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ChargerType'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/chargerType/search:
    post:
      tags:
        - ChargerType
      summary: search
      operationId: searchUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/ChargerTypeFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChargerType'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/chargerType/{id}:
    get:
      tags:
        - ChargerType
      summary: getById
      operationId: getByIdUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChargerType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ChargerType
      summary: put
      operationId: putUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ChargerType'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ChargerType
      summary: deleteById
      operationId: deleteByIdUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/chargingStation:
    get:
      tags:
        - ChargingStation
      summary: getAll
      operationId: getAllUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChargingStation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ChargingStation
      summary: post
      operationId: postUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ChargingStation'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/chargingStation/search:
    post:
      tags:
        - ChargingStation
      summary: search
      operationId: searchUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/ChargingStationFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChargingStation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/chargingStation/{id}:
    get:
      tags:
        - ChargingStation
      summary: getById
      operationId: getByIdUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChargingStation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ChargingStation
      summary: put
      operationId: putUsingPUT_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ChargingStation'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ChargingStation
      summary: deleteById
      operationId: deleteByIdUsingDELETE_2
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/chargingStation/{id}/addCharger:
    put:
      tags:
        - ChargingStation
      summary: addChargerToChargingStation
      operationId: addChargerToChargingStationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/ChargerChargingStation'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChargingStation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/chargingStation/{id}/removeCharger:
    put:
      tags:
        - ChargingStation
      summary: removeChargerFromChargingStation
      operationId: removeChargerFromChargingStationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/ChargerChargingStation'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChargingStation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCar:
    get:
      tags:
        - ElectricCar
      summary: getAll
      operationId: getAllUsingGET_3
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ElectricCar'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ElectricCar
      summary: post
      operationId: postUsingPOST_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ElectricCar'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCar/search:
    post:
      tags:
        - ElectricCar
      summary: search
      operationId: searchUsingPOST_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/ElectricCarFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ElectricCar'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCar/{id}:
    get:
      tags:
        - ElectricCar
      summary: getById
      operationId: getByIdUsingGET_3
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ElectricCar'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ElectricCar
      summary: put
      operationId: putUsingPUT_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ElectricCar'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ElectricCar
      summary: deleteById
      operationId: deleteByIdUsingDELETE_3
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/electricCar/{id}/endCharging:
    post:
      tags:
        - ElectricCar
      summary: endCharging
      operationId: endChargingUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCar/{id}/startCharging:
    post:
      tags:
        - ElectricCar
      summary: startCharging
      operationId: startChargingUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: requestBody
          description: requestBody
          required: true
          schema:
            $ref: '#/definitions/StartChargingRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCarType:
    get:
      tags:
        - ElectricCarType
      summary: getAll
      operationId: getAllUsingGET_4
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ElectricCarType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ElectricCarType
      summary: post
      operationId: postUsingPOST_4
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ElectricCarType'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCarType/search:
    post:
      tags:
        - ElectricCarType
      summary: search
      operationId: searchUsingPOST_4
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/ElectricCarTypeFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ElectricCarType'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/electricCarType/{id}:
    get:
      tags:
        - ElectricCarType
      summary: getById
      operationId: getByIdUsingGET_4
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ElectricCarType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ElectricCarType
      summary: put
      operationId: putUsingPUT_4
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/ElectricCarType'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ElectricCarType
      summary: deleteById
      operationId: deleteByIdUsingDELETE_4
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/hasRightForPage:
    post:
      tags:
        - TokenHandler
      summary: AuthChecking
      operationId: postUsingPOST_8
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/PageAuthorizationRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
            enum:
              - hasRight
              - tokenExpired
              - noRight
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/location:
    get:
      tags:
        - Location
      summary: getAll
      operationId: getAllUsingGET_5
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - Location
      summary: post
      operationId: postUsingPOST_5
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Location'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/location/search:
    post:
      tags:
        - Location
      summary: search
      operationId: searchUsingPOST_5
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/LocationFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/location/{id}:
    get:
      tags:
        - Location
      summary: getById
      operationId: getByIdUsingGET_5
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Location'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Location
      summary: put
      operationId: putUsingPUT_5
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Location'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Location
      summary: deleteById
      operationId: deleteByIdUsingDELETE_5
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/login:
    post:
      tags:
        - TokenHandler
      summary: Login
      operationId: fakeLoginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/notification:
    get:
      tags:
        - Notification
      summary: getAll
      operationId: getAllUsingGET_6
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - Notification
      summary: post
      operationId: postUsingPOST_6
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Notification'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/notification/search:
    post:
      tags:
        - Notification
      summary: search
      operationId: searchUsingPOST_6
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/NotificationFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/notification/{id}:
    get:
      tags:
        - Notification
      summary: getById
      operationId: getByIdUsingGET_6
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Notification
      summary: put
      operationId: putUsingPUT_6
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Notification'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Notification
      summary: deleteById
      operationId: deleteByIdUsingDELETE_6
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/person:
    get:
      tags:
        - Person
      summary: getAll
      operationId: getAllUsingGET_7
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/person/current-person:
    get:
      tags:
        - Person
      summary: getByJwtToken
      operationId: getByJwtTokenUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Person'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/person/register:
    post:
      tags:
        - Person
      summary: post
      operationId: postUsingPOST_7
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/person/search:
    post:
      tags:
        - Person
      summary: search
      operationId: searchUsingPOST_7
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            $ref: '#/definitions/PersonFilter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/person/{id}:
    get:
      tags:
        - Person
      summary: getById
      operationId: getByIdUsingGET_7
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Person'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Person
      summary: put
      operationId: putUsingPUT_7
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Person'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Person
      summary: deleteById
      operationId: deleteByIdUsingDELETE_7
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  /api/person/{id}/addrole:
    put:
      tags:
        - Person
      summary: addRoleToUser
      operationId: addRoleToUserUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - in: body
          name: role
          description: role
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Person'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/person/{id}/setCar:
    put:
      tags:
        - Person
      summary: setCar
      operationId: setCarUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/PersonCar'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Person'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/role:
    get:
      tags:
        - TokenHandler
      summary: RoleChecking
      operationId: getRoleUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
            enum:
              - user
              - admin
              - none
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  /api/token/refresh:
    post:
      tags:
        - TokenHandler
      summary: refreshToken
      operationId: refreshTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /email/sendmail:
    post:
      tags:
        - EmailSending
      summary: sendmail
      operationId: sendmailUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/EmailRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  AuthenticationRequest:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: AuthenticationRequest
  Charger:
    type: object
    properties:
      chargerType:
        $ref: '#/definitions/ChargerType'
      currentlyChargingCar:
        $ref: '#/definitions/ElectricCar'
      id:
        type: integer
        format: int64
    title: Charger
  ChargerChargingStation:
    type: object
    properties:
      chargerId:
        type: integer
        format: int64
    title: ChargerChargingStation
  ChargerFilter:
    type: object
    properties:
      chargerType:
        type: string
      chargingStation:
        type: integer
        format: int64
      currentlyChargingCar:
        type: integer
        format: int64
      observed:
        type: boolean
      reserved:
        type: boolean
    title: ChargerFilter
  ChargerType:
    type: object
    properties:
      id:
        type: integer
        format: int64
      maxChargingSpeed:
        type: integer
        format: int32
      name:
        type: string
    title: ChargerType
  ChargerTypeFilter:
    type: object
    properties:
      maxChargingSpeed:
        type: integer
        format: int32
      name:
        type: string
    title: ChargerTypeFilter
  ChargingStation:
    type: object
    properties:
      chargers:
        type: array
        items:
          $ref: '#/definitions/Charger'
      id:
        type: integer
        format: int64
      location:
        $ref: '#/definitions/Location'
      maxNumberOfChargers:
        type: integer
        format: int32
      ownerCompanyName:
        type: string
    title: ChargingStation
  ChargingStationFilter:
    type: object
    properties:
      chargerTypes:
        type: array
        items:
          type: string
      maxNumberOfChargers:
        type: integer
        format: int32
      ownerCompanyName:
        type: string
      point:
        $ref: '#/definitions/LongitudeLatitude'
      radius:
        type: number
        format: double
    title: ChargingStationFilter
  ElectricCar:
    type: object
    properties:
      batteryPercentage:
        type: integer
        format: int32
      carType:
        $ref: '#/definitions/ElectricCarType'
      id:
        type: integer
        format: int64
      licensePlate:
        type: string
    title: ElectricCar
  ElectricCarFilter:
    type: object
    properties:
      carType:
        type: string
      charger:
        type: integer
        format: int64
      currentlyCharging:
        type: boolean
      driver:
        type: integer
        format: int64
      licensePlate:
        type: string
      maxBatteryPercentage:
        type: integer
        format: int32
      minBatteryPercentage:
        type: integer
        format: int32
    title: ElectricCarFilter
  ElectricCarType:
    type: object
    properties:
      batterySize:
        type: integer
        format: int32
      compatibleChargerTypes:
        type: array
        items:
          $ref: '#/definitions/ChargerType'
      dischargingSpeed:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      maxChargingSpeed:
        type: integer
        format: int32
      name:
        type: string
    title: ElectricCarType
  ElectricCarTypeFilter:
    type: object
    properties:
      name:
        type: string
    title: ElectricCarTypeFilter
  EmailRequest:
    type: object
    properties:
      subject:
        type: string
      text:
        type: string
      to:
        type: string
    title: EmailRequest
  Location:
    type: object
    properties:
      coordinates:
        $ref: '#/definitions/LongitudeLatitude'
      id:
        type: integer
        format: int64
    title: Location
  LocationFilter:
    type: object
    properties:
      point:
        $ref: '#/definitions/LongitudeLatitude'
      radius:
        type: number
        format: double
    title: LocationFilter
  LongitudeLatitude:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
    title: LongitudeLatitude
  Notification:
    type: object
    properties:
      id:
        type: integer
        format: int64
      observedChargerId:
        type: integer
        format: int64
      personToNotifyId:
        type: integer
        format: int64
    title: Notification
  NotificationFilter:
    type: object
    properties:
      chargerId:
        type: integer
        format: int64
      personId:
        type: integer
        format: int64
    title: NotificationFilter
  PageAuthorizationRequest:
    type: object
    properties:
      route:
        type: string
    title: PageAuthorizationRequest
  Person:
    type: object
    properties:
      car:
        $ref: '#/definitions/ElectricCar'
      email:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      observedChargers:
        type: array
        items:
          $ref: '#/definitions/Charger'
      password:
        type: string
      phoneNumber:
        type: string
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
      username:
        type: string
    title: Person
  PersonCar:
    type: object
    properties:
      carId:
        type: integer
        format: int64
    title: PersonCar
  PersonFilter:
    type: object
    properties:
      car:
        type: integer
        format: int64
      email:
        type: string
      hasCar:
        type: boolean
      name:
        type: string
      observingCharger:
        type: boolean
      phoneNumber:
        type: string
      roleName:
        type: string
      username:
        type: string
    title: PersonFilter
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Role
  StartChargingRequest:
    type: object
    properties:
      chargerId:
        type: integer
        format: int64
    title: StartChargingRequest
