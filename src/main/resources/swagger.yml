---
swagger: '2.0'
info:
  description: ev-charger-app API to perform CRUD opertations
  version: '1.0'
  title: ev-charger-app REST API
  termsOfService: Terms of service
  contact:
    name: Adja
host: localhost:8080
basePath: "/"
tags:
  - name: ChargerType
    description: Charger Type Controller
  - name: Chargers
    description: Charger Controller
  - name: ChargingStations
    description: Charging Station Controller
  - name: ElectricCarTypes
    description: Electric Car Type Controller
  - name: ElectricCars
    description: Electric Car Controller
  - name: Locations
    description: Location Controller
  - name: Persons
    description: Person Controller
  - name: TokenHandler
    description: Token Controller
paths:
  "/api/charger":
    get:
      tags:
        - Chargers
      summary: getAll
      operationId: getAllUsingGET
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Charger"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - Chargers
      summary: post
      operationId: postUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/Charger"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/charger/search":
    post:
      tags:
        - Chargers
      summary: search
      operationId: searchUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/ChargerFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Charger"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/charger/{id}":
    get:
      tags:
        - Chargers
      summary: getById
      operationId: getByIdUsingGET
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Charger"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Chargers
      summary: put
      operationId: putUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/Charger"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Chargers
      summary: deleteById
      operationId: deleteByIdUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/chargerType":
    get:
      tags:
        - ChargerType
      summary: getAll
      operationId: getAllUsingGET_1
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ChargerType"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ChargerType
      summary: post
      operationId: postUsingPOST_1
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ChargerType"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/chargerType/search":
    post:
      tags:
        - ChargerType
      summary: search
      operationId: searchUsingPOST_1
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/ChargerTypeFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ChargerType"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/chargerType/{id}":
    get:
      tags:
        - ChargerType
      summary: getById
      operationId: getByIdUsingGET_1
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ChargerType"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ChargerType
      summary: put
      operationId: putUsingPUT_1
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ChargerType"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ChargerType
      summary: deleteById
      operationId: deleteByIdUsingDELETE_1
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/chargingStation":
    get:
      tags:
        - ChargingStations
      summary: getAll
      operationId: getAllUsingGET_2
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ChargingStation"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ChargingStations
      summary: post
      operationId: postUsingPOST_2
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ChargingStation"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/chargingStation/search":
    post:
      tags:
        - ChargingStations
      summary: search
      operationId: searchUsingPOST_2
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/ChargingStationFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ChargingStation"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/chargingStation/{id}":
    get:
      tags:
        - ChargingStations
      summary: getById
      operationId: getByIdUsingGET_2
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ChargingStation"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ChargingStations
      summary: put
      operationId: putUsingPUT_2
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ChargingStation"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ChargingStations
      summary: deleteById
      operationId: deleteByIdUsingDELETE_2
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCar":
    get:
      tags:
        - ElectricCars
      summary: getAll
      operationId: getAllUsingGET_3
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ElectricCar"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ElectricCars
      summary: post
      operationId: postUsingPOST_3
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ElectricCar"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCar/search":
    post:
      tags:
        - ElectricCars
      summary: search
      operationId: searchUsingPOST_3
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/ElectricCarFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ElectricCar"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCar/{id}":
    get:
      tags:
        - ElectricCars
      summary: getById
      operationId: getByIdUsingGET_3
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ElectricCar"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ElectricCars
      summary: put
      operationId: putUsingPUT_3
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ElectricCar"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ElectricCars
      summary: deleteById
      operationId: deleteByIdUsingDELETE_3
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCar/{id}/endCharging":
    post:
      tags:
        - ElectricCars
      summary: endCharging
      operationId: endChargingUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCar/{id}/startCharging":
    post:
      tags:
        - ElectricCars
      summary: startCharging
      operationId: startChargingUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: requestBody
          description: requestBody
          required: true
          schema:
            "$ref": "#/definitions/StartChargingRequest"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCarType":
    get:
      tags:
        - ElectricCarTypes
      summary: getAll
      operationId: getAllUsingGET_4
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ElectricCarType"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - ElectricCarTypes
      summary: post
      operationId: postUsingPOST_4
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ElectricCarType"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCarType/search":
    post:
      tags:
        - ElectricCarTypes
      summary: search
      operationId: searchUsingPOST_4
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/ElectricCarTypeFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ElectricCarType"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/electricCarType/{id}":
    get:
      tags:
        - ElectricCarTypes
      summary: getById
      operationId: getByIdUsingGET_4
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ElectricCarType"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - ElectricCarTypes
      summary: put
      operationId: putUsingPUT_4
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/ElectricCarType"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - ElectricCarTypes
      summary: deleteById
      operationId: deleteByIdUsingDELETE_4
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/hasRightForPage":
    post:
      tags:
        - TokenHandler
      summary: AuthChecking
      operationId: postUsingPOST_7
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            "$ref": "#/definitions/RouteAuthoriztationRequest"
      responses:
        '200':
          description: OK
          schema:
            type: string
            enum:
              - hasRight
              - tokenExpired
              - noRight
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/location":
    get:
      tags:
        - Locations
      summary: getAll
      operationId: getAllUsingGET_5
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Location"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    post:
      tags:
        - Locations
      summary: post
      operationId: postUsingPOST_5
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/Location"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/location/search":
    post:
      tags:
        - Locations
      summary: search
      operationId: searchUsingPOST_5
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/LocationFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Location"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/location/{id}":
    get:
      tags:
        - Locations
      summary: getById
      operationId: getByIdUsingGET_5
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Location"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Locations
      summary: put
      operationId: putUsingPUT_5
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/Location"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Locations
      summary: deleteById
      operationId: deleteByIdUsingDELETE_5
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/login":
    post:
      tags:
        - TokenHandler
      summary: Login
      operationId: fakeLoginUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: body
          description: body
          required: true
          schema:
            "$ref": "#/definitions/AuthenticationRequest"
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/person":
    get:
      tags:
        - Persons
      summary: getAll
      operationId: getAllUsingGET_6
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Person"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/person/register":
    post:
      tags:
        - Persons
      summary: post
      operationId: postUsingPOST_6
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/Person"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/person/search":
    post:
      tags:
        - Persons
      summary: search
      operationId: searchUsingPOST_6
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/PersonFilter"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Person"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/person/{id}":
    get:
      tags:
        - Persons
      summary: getById
      operationId: getByIdUsingGET_6
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Person"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    put:
      tags:
        - Persons
      summary: put
      operationId: putUsingPUT_6
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            "$ref": "#/definitions/Person"
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
    delete:
      tags:
        - Persons
      summary: deleteById
      operationId: deleteByIdUsingDELETE_6
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      deprecated: false
  "/api/person/{id}/addrole":
    put:
      tags:
        - Persons
      summary: addRoleToUser
      operationId: addRoleToUserUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - in: body
          name: role
          description: role
          required: true
          schema:
            "$ref": "#/definitions/Role"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Person"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
      deprecated: false
  "/api/token/refresh":
    post:
      tags:
        - TokenHandler
      summary: refreshToken
      operationId: refreshTokenUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  AuthenticationRequest:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: AuthenticationRequest
  Charger:
    type: object
    properties:
      chargerType:
        "$ref": "#/definitions/ChargerType"
      currentlyChargingCar:
        "$ref": "#/definitions/ElectricCar"
      id:
        type: integer
        format: int64
    title: Charger
  ChargerFilter:
    type: object
    properties:
      chargerType:
        type: string
      chargingStation:
        type: integer
        format: int64
      currentlyChargingCar:
        type: integer
        format: int64
      reserved:
        type: boolean
    title: ChargerFilter
  ChargerType:
    type: object
    properties:
      id:
        type: integer
        format: int64
      maxChargingSpeed:
        type: integer
        format: int32
      name:
        type: string
    title: ChargerType
  ChargerTypeFilter:
    type: object
    properties:
      maxChargingSpeed:
        type: integer
        format: int32
      name:
        type: string
    title: ChargerTypeFilter
  ChargingStation:
    type: object
    properties:
      chargers:
        type: array
        items:
          "$ref": "#/definitions/Charger"
      id:
        type: integer
        format: int64
      location:
        "$ref": "#/definitions/Location"
      maxNumberOfChargers:
        type: integer
        format: int32
      ownerCompanyName:
        type: string
    title: ChargingStation
  ChargingStationFilter:
    type: object
    properties:
      chargerTypes:
        type: array
        items:
          type: string
      maxNumberOfChargers:
        type: integer
        format: int32
      ownerCompanyName:
        type: string
      point:
        "$ref": "#/definitions/LongitudeLatitude"
      radius:
        type: number
        format: double
    title: ChargingStationFilter
  ElectricCar:
    type: object
    properties:
      batteryPercentage:
        type: integer
        format: int32
      carType:
        "$ref": "#/definitions/ElectricCarType"
      id:
        type: integer
        format: int64
      licensePlate:
        type: string
    title: ElectricCar
  ElectricCarFilter:
    type: object
    properties:
      carType:
        type: string
      charger:
        type: integer
        format: int64
      driver:
        type: integer
        format: int64
      licensePlate:
        type: string
      maxBatteryPercentage:
        type: integer
        format: int32
      minBatteryPercentage:
        type: integer
        format: int32
    title: ElectricCarFilter
  ElectricCarType:
    type: object
    properties:
      batterySize:
        type: integer
        format: int32
      compatibleChargerTypes:
        type: array
        items:
          "$ref": "#/definitions/ChargerType"
      dischargingSpeed:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      maxChargingSpeed:
        type: integer
        format: int32
      name:
        type: string
    title: ElectricCarType
  ElectricCarTypeFilter:
    type: object
    properties:
      name:
        type: string
    title: ElectricCarTypeFilter
  Location:
    type: object
    properties:
      coordinates:
        "$ref": "#/definitions/LongitudeLatitude"
      id:
        type: integer
        format: int64
    title: Location
  LocationFilter:
    type: object
    properties:
      point:
        "$ref": "#/definitions/LongitudeLatitude"
      radius:
        type: number
        format: double
    title: LocationFilter
  LongitudeLatitude:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
    title: LongitudeLatitude
  Person:
    type: object
    properties:
      car:
        "$ref": "#/definitions/ElectricCar"
      email:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      roles:
        type: array
        items:
          "$ref": "#/definitions/Role"
      username:
        type: string
    title: Person
  PersonFilter:
    type: object
    properties:
      car:
        type: integer
        format: int64
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      roleName:
        type: string
      username:
        type: string
    title: PersonFilter
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Role
  RouteAuthoriztationRequest:
    type: object
    properties:
      route:
        type: string
    title: RouteAuthoriztationRequest
  StartChargingRequest:
    type: object
    properties:
      chargerId:
        type: integer
        format: int64
    title: StartChargingRequest